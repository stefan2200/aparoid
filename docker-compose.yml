version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:3.2.1
    hostname: zookeeper
    ports:
      - '32181:32181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181

  kafka:
    image: confluentinc/cp-kafka:3.2.1
    hostname: kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: "postgres:13"
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=aparoid
      - POSTGRES_PASSWORD=aparoid
      - POSTGRES_DB=aparoid
    healthcheck:
      test: "pg_isready --username=aparoid && psql --username=aparoid --list"
      timeout: 10s
      retries: 20
  aparoid:
    container_name: Aparoid
    privileged: true
    devices:
      - '/dev:/dev'
    build:
      context: .
      dockerfile: Dockerfile
      args:
       - CONTAINERCONFIG=enabled
    ports:
     - "7300:7300"
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy
    links:
      - "kafka"
      - "postgres"
